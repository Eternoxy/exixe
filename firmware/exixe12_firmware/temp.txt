  if(HAL_TIM_Base_Start(&htim14) != HAL_OK)
    while(1)
      ;

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
    if(htim2.Instance->CCR3 > 127)
      htim2.Instance->CCR3 = 0;
    else
      htim2.Instance->CCR3 = htim2.Instance->CCR3 + 1;
}

  htim2.Instance->CCR3 = 0;
    htim2.Instance->CCR4 = 127 - 32;
    htim1.Instance->CCR4 = 127;

  if(pwm_soft_counter > 90)
      HAL_GPIO_WritePin(NIX_2_GPIO_Port, NIX_2_Pin, GPIO_PIN_SET);
    else
      HAL_GPIO_WritePin(NIX_2_GPIO_Port, NIX_2_Pin, GPIO_PIN_RESET);

  // if(pwm_arr[10] & 0x80)
  // {
  //   htim2.Instance->CCR2 = pwm_arr[10] & 0x7f; // 0
  //   pwm_stats[10] = pwm_arr[10];
  // }

  // if(pwm_arr[7] & 0x80)
  // {
  //   htim3.Instance->CCR2 = pwm_arr[7] & 0x7f; // 7
  //   pwm_stats[7] = pwm_arr[7];
  // }
  
  // if(pwm_arr[4] & 0x80)
  // {
  //   htim3.Instance->CCR1 = pwm_arr[4] & 0x7f; // 4
  //   pwm_stats[4] = pwm_arr[4];
  // }
  
  // if(pwm_arr[2] & 0x80)
  // {
  //   htim1.Instance->CCR2 = pwm_arr[2] & 0x7f; // 2
  //   pwm_stats[2] = pwm_arr[2];
  // }
  // if(pwm_arr[11] & 0x80)
  // {
  //   htim16.Instance->CCR1 = pwm_arr[11] & 0x7f; // left dot
  //   pwm_stats[11] = pwm_arr[11];
  // }

// pwm_stats[3] = 0xBf;
  // work: 1 5 6 8 9 3

  // work: DL, 7, 2, 0, 4
  // HAL_GPIO_WritePin(NIX_2_GPIO_Port, NIX_2_Pin, GPIO_PIN_SET);
  if(pwm_arr[13] & 0x80)
  {
    htim2.Instance->CCR3 = 127 - (pwm_arr[13] & 0x7f); // R
    pwm_stats[13] = pwm_arr[13];
  }
  if(pwm_arr[14] & 0x80)
  {
    htim2.Instance->CCR4 = 127 - (pwm_arr[14] & 0x7f); // G
    pwm_stats[14] = pwm_arr[14];
  }
  if(pwm_arr[15] & 0x80)
  {
    htim1.Instance->CCR4 = 127 - (pwm_arr[15] & 0x7f); // B
    pwm_stats[15] = pwm_arr[15];
  }
  if(pwm_arr[1] & 0x80)
  {
    htim16.Instance->CCR1 = pwm_arr[1] & 0x7f; // 1
    pwm_stats[1] = pwm_arr[1];
  }
  if(pwm_arr[3] & 0x80)
  {
    htim2.Instance->CCR1 = pwm_arr[3] & 0x7f; // 3
    pwm_stats[3] = pwm_arr[3];
  }
  if(pwm_arr[5] & 0x80)
  {
    htim2.Instance->CCR2 = pwm_arr[5] & 0x7f; // 5
    pwm_stats[5] = pwm_arr[5];
  }
  if(pwm_arr[6] & 0x80)
  {
    htim1.Instance->CCR1 = pwm_arr[6] & 0x7f; // 6
    pwm_stats[6] = pwm_arr[6];
  }
  if(pwm_arr[8] & 0x80)
  {
    htim3.Instance->CCR2 = pwm_arr[8] & 0x7f; // 8
    pwm_stats[8] = pwm_arr[8];
  }
  if(pwm_arr[9] & 0x80)
  {
    htim3.Instance->CCR1 = pwm_arr[9] & 0x7f; // 9
    pwm_stats[9] = pwm_arr[9];
  }
